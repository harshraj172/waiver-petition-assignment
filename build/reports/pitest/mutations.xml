<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testNullExpression(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testNullExpression(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testChainedIntersections(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>6</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced boolean return with true for intervals/IntervalTree::isOperator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>27</index></indexes><blocks><block>4</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>53</index></indexes><blocks><block>10</block></blocks><killingTest>IntervalTreeTest.testInvalidIntervalFormat4(IntervalTreeTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testInvalidIntervalFormat3(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>61</index></indexes><blocks><block>13</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>64</index></indexes><blocks><block>15</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testInvalidIntervalFormat3(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='39'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>61</index></indexes><blocks><block>13</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='37'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>64</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='38'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>61</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>64</index></indexes><blocks><block>15</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>93</index></indexes><blocks><block>21</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree::parseInterval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>IntervalTreeTest.testOnlyOperator(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>120</index></indexes><blocks><block>23</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>125</index></indexes><blocks><block>25</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>120</index></indexes><blocks><block>23</block></blocks><killingTest>IntervalTreeTest.testTooManyOperands(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>125</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>120</index></indexes><blocks><block>23</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>125</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>IntervalTreeTest.testOnlyOperator(IntervalTreeTest)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>147</index></indexes><blocks><block>31</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree::parsePostfix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testNullExpression(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='37'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testNullExpression(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>16</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>20</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testFractionalDivision(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>ExpressionTreeTest.testZeroInOperations(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>16</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testOperatorPrecedenceInPostfix(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>20</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>10</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced boolean return with true for expression/ExpressionTree::isOperator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testOnlyOperator(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>119</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testTooManyOperands(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>124</index></indexes><blocks><block>25</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>119</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testTooManyOperands(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>124</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>119</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>124</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testOnlyOperator(ExpressionTreeTest)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>146</index></indexes><blocks><block>31</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced return value with null for expression/ExpressionTree::parsePostfix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$NumberNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for expression/ExpressionTree$NumberNode::getHeight</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>67</index></indexes><blocks><block>17</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>74</index></indexes><blocks><block>18</block></blocks><killingTest>ExpressionTreeTest.testComplexExpression3(ExpressionTreeTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>81</index></indexes><blocks><block>19</block></blocks><killingTest>ExpressionTreeTest.testOperatorPrecedenceInPostfix(ExpressionTreeTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>102</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testFractionalDivision(ExpressionTreeTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>89</index></indexes><blocks><block>20</block></blocks><killingTest>ExpressionTreeTest.testFractionalDivision(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>89</index></indexes><blocks><block>20</block></blocks><killingTest>ExpressionTreeTest.testDivisionByZeroComplex(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>89</index></indexes><blocks><block>20</block></blocks><killingTest>ExpressionTreeTest.testFractionalDivision(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>68</index></indexes><blocks><block>17</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>75</index></indexes><blocks><block>18</block></blocks><killingTest>ExpressionTreeTest.testZeroInOperations(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>82</index></indexes><blocks><block>19</block></blocks><killingTest>ExpressionTreeTest.testOperatorPrecedenceInPostfix(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>103</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testFractionalDivision(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced int return with 0 for expression/ExpressionTree$OperatorNode::getHeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest>ExpressionTreeTest.testComplexTextTree(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest>ExpressionTreeTest.testComplexTextTree(ExpressionTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testNoIntersection(IntervalTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testInvalidIntervalOrder(IntervalTreeTest)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testExamplesFromAssignment(IntervalTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testChainedIntersections(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testNoIntersection(IntervalTreeTest)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testChainedIntersections(IntervalTreeTest)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testChainedIntersections(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/Interval::intersect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/Interval::union</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>50</index></indexes><blocks><block>12</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>57</index></indexes><blocks><block>14</block></blocks><killingTest>IntervalTreeTest.testChainedIntersections(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree$OperatorNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced int return with 0 for intervals/IntervalTree$OperatorNode::getHeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest>IntervalTreeTest.testSimpleIntersection(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest>IntervalTreeTest.testSimpleIntersection(IntervalTreeTest)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$IntervalNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree$IntervalNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$IntervalNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for intervals/IntervalTree$IntervalNode::getHeight</description></mutation>
</mutations>
