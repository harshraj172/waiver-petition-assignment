<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testNullExpression(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest>IntervalTreeTest.testIntervalTreeEmptyChecks(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testParseIntervalExactValidation(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testParseIntervalExactValidation(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>6</block></blocks><killingTest>IntervalTreeTest.testParseIntervalExactValidation(IntervalTreeTest)</killingTest><description>replaced boolean return with true for intervals/IntervalTree::isOperator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>27</index></indexes><blocks><block>4</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>53</index></indexes><blocks><block>10</block></blocks><killingTest>IntervalTreeTest.testInvalidIntervalFormat4(IntervalTreeTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testInvalidIntervalFormat1(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>61</index></indexes><blocks><block>13</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>64</index></indexes><blocks><block>15</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parseInterval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/Interval;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>93</index></indexes><blocks><block>21</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree::parseInterval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testParseIntervalExactValidation(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>IntervalTreeTest.testOnlyOperator(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>120</index></indexes><blocks><block>23</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>125</index></indexes><blocks><block>25</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lintervals/IntervalTree$Node;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>147</index></indexes><blocks><block>31</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree::parsePostfix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with &quot;&quot; for intervals/IntervalTree::textTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testNullExpression(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest>ExpressionTreeTest.testNullAndEmptyValidation(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testFloatFormattingPrecision(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree::infix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testParsePostfixStackValidation(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>ExpressionTreeTest.testIsOperatorAllCases(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testIsOperatorAllCases(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testIsOperatorAllCases(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>isOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>10</block></blocks><killingTest>ExpressionTreeTest.testIsOperatorAllCases(ExpressionTreeTest)</killingTest><description>replaced boolean return with true for expression/ExpressionTree::isOperator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>5</block></blocks><killingTest>ExpressionTreeTest.testParsePostfixStackValidation(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest>ExpressionTreeTest.testOnlyOperator(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>119</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testTooManyOperands(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>124</index></indexes><blocks><block>25</block></blocks><killingTest>ExpressionTreeTest.testStackSizeValidation(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>parsePostfix</mutatedMethod><methodDescription>(Ljava/lang/String;)Lexpression/ExpressionTree$Node;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>146</index></indexes><blocks><block>31</block></blocks><killingTest>ExpressionTreeTest.testFloatFormattingPrecision(ExpressionTreeTest)</killingTest><description>replaced return value with null for expression/ExpressionTree::parsePostfix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testSingleNumber(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree::schemeExpression</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testSingleNumber(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree::textTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>67</index></indexes><blocks><block>17</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>74</index></indexes><blocks><block>18</block></blocks><killingTest>ExpressionTreeTest.testComplexExpression3(ExpressionTreeTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>81</index></indexes><blocks><block>19</block></blocks><killingTest>ExpressionTreeTest.testComplexExpression3(ExpressionTreeTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>102</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testNumberNodeInfinityCheck(ExpressionTreeTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>89</index></indexes><blocks><block>20</block></blocks><killingTest>ExpressionTreeTest.testNumberNodeInfinityCheck(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>68</index></indexes><blocks><block>17</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>75</index></indexes><blocks><block>18</block></blocks><killingTest>ExpressionTreeTest.testZeroInOperations(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>82</index></indexes><blocks><block>19</block></blocks><killingTest>ExpressionTreeTest.testComplexExpression3(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>103</index></indexes><blocks><block>23</block></blocks><killingTest>ExpressionTreeTest.testNumberNodeInfinityCheck(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$OperatorNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced int return with 0 for expression/ExpressionTree$OperatorNode::getHeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest>ExpressionTreeTest.testExactStringComparisons(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$OperatorNode::infix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTest>ExpressionTreeTest.testExactStringComparisons(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$OperatorNode::schemeExpression</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest>ExpressionTreeTest.testComplexTextTree(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>103</index></indexes><blocks><block>22</block></blocks><killingTest>ExpressionTreeTest.testTextTreeExactFormat(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$OperatorNode::textTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testExactComparisonOperators(IntervalTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testHashCodeConsistency(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>IntervalTreeTest.testEqualsExactBehavior(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testEqualsExactBehavior(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>32</index></indexes><blocks><block>4</block></blocks><killingTest>IntervalTreeTest.testEqualsExactBehavior(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>37</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testEqualsExactBehavior(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testIntervalEqualsAllBranches(IntervalTreeTest)</killingTest><description>replaced boolean return with false for intervals/Interval::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testIntervalEqualsAllBranches(IntervalTreeTest)</killingTest><description>replaced boolean return with true for intervals/Interval::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>45</index></indexes><blocks><block>8</block></blocks><killingTest>IntervalTreeTest.testEqualsExactBehavior(IntervalTreeTest)</killingTest><description>replaced boolean return with true for intervals/Interval::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced int return with 0 for intervals/Interval::hashCode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testExamplesFromAssignment(IntervalTreeTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>IntervalTreeTest.testIntervalIntersectionCondition(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>38</index></indexes><blocks><block>5</block></blocks><killingTest>IntervalTreeTest.testIntervalIntersectionCondition(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/Interval::intersect</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest>IntervalTreeTest.testIntervalStartEndComparison(IntervalTreeTest)</killingTest><description>replaced return value with &quot;&quot; for intervals/Interval::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Interval.java</sourceFile><mutatedClass>intervals.Interval</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Lintervals/Interval;)Lintervals/Interval;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTest>IntervalTreeTest.testIntervalUnionMathOperations(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/Interval::union</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>ExpressionTreeTest.testWhitespaceHandling(ExpressionTreeTest)</killingTest><description>replaced double return with 0.0d for expression/ExpressionTree$NumberNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for expression/ExpressionTree$NumberNode::getHeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testFloatFormattingPrecision(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTest>ExpressionTreeTest.testCriticalMutationPoints(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$NumberNode::infix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>infix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>33</index></indexes><blocks><block>8</block></blocks><killingTest>ExpressionTreeTest.testCriticalMutationPoints(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$NumberNode::infix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testNumberFormattingBoundaryConditions(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTest>ExpressionTreeTest.testSingleNumber(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$NumberNode::schemeExpression</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>schemeExpression</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>33</index></indexes><blocks><block>8</block></blocks><killingTest>ExpressionTreeTest.testNegativeNumber(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$NumberNode::schemeExpression</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>ExpressionTreeTest.testNumberFormattingBoundaryConditions(ExpressionTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTest>ExpressionTreeTest.testSingleNumber(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$NumberNode::textTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionTree.java</sourceFile><mutatedClass>expression.ExpressionTree$NumberNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>33</index></indexes><blocks><block>8</block></blocks><killingTest>ExpressionTreeTest.testNegativeNumber(ExpressionTreeTest)</killingTest><description>replaced return value with &quot;&quot; for expression/ExpressionTree$NumberNode::textTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>50</index></indexes><blocks><block>12</block></blocks><killingTest>IntervalTreeTest.testVeryLongExpression(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree$OperatorNode::evaluate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>57</index></indexes><blocks><block>14</block></blocks><killingTest>IntervalTreeTest.testChainedIntersections(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree$OperatorNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced int return with 0 for intervals/IntervalTree$OperatorNode::getHeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>12</block></blocks><killingTest>IntervalTreeTest.testExactTextTreeFormat(IntervalTreeTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$OperatorNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>103</index></indexes><blocks><block>22</block></blocks><killingTest>IntervalTreeTest.testExactTextTreeFormat(IntervalTreeTest)</killingTest><description>replaced return value with &quot;&quot; for intervals/IntervalTree$OperatorNode::textTree</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$IntervalNode</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>()Lintervals/Interval;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with null for intervals/IntervalTree$IntervalNode::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$IntervalNode</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for intervals/IntervalTree$IntervalNode::getHeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntervalTree.java</sourceFile><mutatedClass>intervals.IntervalTree$IntervalNode</mutatedClass><mutatedMethod>textTree</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>IntervalTreeTest.testSingleInterval(IntervalTreeTest)</killingTest><description>replaced return value with &quot;&quot; for intervals/IntervalTree$IntervalNode::textTree</description></mutation>
</mutations>
